IList<CustomInstruction> instructionList = new List<CustomInstruction>();

CustomInstruction instruction;
CustomMethod meth;
CustomLocal custLocal;

// CIL Instruction 1.
instruction = new CustomInstruction();
instruction.Offset = 0;
instruction.OpCode = OpCode._Locals;
instruction.Value = "{Microsoft.FxCop.Sdk.LocalCollection}";

instructionList.Add(instruction);

// CIL Instruction 2.
instruction = new CustomInstruction();
instruction.Offset = 0;
instruction.OpCode = OpCode.Nop;
instruction.Value = null;

instructionList.Add(instruction);

// CIL Instruction 3.
instruction = new CustomInstruction();
instruction.Offset = 1;
instruction.OpCode = OpCode.Ldc_I4_0;
instruction.Value = 0;

instructionList.Add(instruction);

// CIL Instruction 4.
instruction = new CustomInstruction();
instruction.Offset = 2;
instruction.OpCode = OpCode.Newarr;
instruction.Value = "{Microsoft.FxCop.Sdk.ClassNode:System.Object}";

instructionList.Add(instruction);

// CIL Instruction 5.
instruction = new CustomInstruction();
instruction.Offset = 7;
instruction.OpCode = OpCode.Call;
meth = new CustomMethod();
meth.IsReturnTypeVoid = false;
meth.IsStatic = true;
meth.NumberOfParameters = 1;
meth.Signature = "{Rhino.Mocks.MockRepository.GenerateStub<Srl.FxCop.CustomDeveloperTestRules.TestTargets.IBar>(System.Object[])}";
instruction.Value = meth;

instructionList.Add(instruction);

// CIL Instruction 6.
instruction = new CustomInstruction();
instruction.Offset = 12;
instruction.OpCode = OpCode.Stloc_0;
custLocal = new CustomLocal();
custLocal.Name = "localStub";
instruction.Value = custLocal;

instructionList.Add(instruction);

// CIL Instruction 7.
instruction = new CustomInstruction();
instruction.Offset = 13;
instruction.OpCode = OpCode.Ldloc_0;
custLocal = new CustomLocal();
custLocal.Name = "localStub";
instruction.Value = custLocal;

instructionList.Add(instruction);

// CIL Instruction 8.
instruction = new CustomInstruction();
instruction.Offset = 14;
instruction.OpCode = OpCode.Call;
meth = new CustomMethod();
meth.IsReturnTypeVoid = true;
meth.IsStatic = true;
meth.NumberOfParameters = 1;
meth.Signature = "{Rhino.Mocks.RhinoMocksExtensions.VerifyAllExpectations(System.Object)}";
instruction.Value = meth;

instructionList.Add(instruction);

// CIL Instruction 9.
instruction = new CustomInstruction();
instruction.Offset = 19;
instruction.OpCode = OpCode.Nop;
instruction.Value = null;

instructionList.Add(instruction);

// CIL Instruction 10.
instruction = new CustomInstruction();
instruction.Offset = 20;
instruction.OpCode = OpCode.Ret;
instruction.Value = null;

instructionList.Add(instruction);

return instructionList;
